name: Deploy Cloud Engineering Tutorials

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate Infrastructure Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.6.0
    
    - name: Terraform Format Check
      run: |
        cd tutorials/terraform-aws-basics
        terraform fmt -check -diff
      continue-on-error: true
    
    - name: Terraform Init and Validate
      run: |
        cd tutorials/terraform-aws-basics
        terraform init -backend=false
        terraform validate
      continue-on-error: true
    
    - name: Docker Build Test
      run: |
        cd tutorials/docker-optimization
        docker build -t test-app .
        docker run --rm test-app echo "Docker build successful"
      continue-on-error: true

  deploy-website:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js (for any build tools)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Build website
      run: |
        # Copy website files to build directory
        mkdir -p build
        cp -r website/* build/
        cp README.md build/
        
        # Create tutorials index
        echo "<h1>Cloud Engineering Tutorials</h1>" > build/tutorials.html
        echo "<p>Available tutorials:</p><ul>" >> build/tutorials.html
        find tutorials/ -name "README.md" -exec echo "<li><a href='{}'>{}</a></li>" \; >> build/tutorials.html
        echo "</ul>" >> build/tutorials.html
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
        cname: dkumi12-cloud-tutorials.github.io

  security-scan:
    name: Security and Best Practices Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Checkov (Infrastructure Security)
      run: |
        pip install checkov
        checkov -d tutorials/terraform-aws-basics --framework terraform
      continue-on-error: true
    
    - name: Docker Security Scan
      run: |
        cd tutorials/docker-optimization
        docker build -t security-test .
        docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
          aquasec/trivy image security-test || echo "Security scan completed"
      continue-on-error: true

  test-tutorials:
    name: Test Tutorial Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check Tutorial Completeness
      run: |
        echo "Checking tutorial documentation..."
        
        # Check each tutorial has required files
        for tutorial in tutorials/*/; do
          if [ -f "$tutorial/README.md" ]; then
            echo "✓ $tutorial has documentation"
          else
            echo "⚠ $tutorial missing README.md"
          fi
        done
        
        # Check for broken links in documentation
        find . -name "*.md" -exec grep -l "http" {} \; | head -5
        
        echo "Tutorial validation completed"